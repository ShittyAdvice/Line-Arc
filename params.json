{"name":"Line-arc","tagline":"Simple application with circle based calculations","body":"## Preview\r\n<div id=\"canvasWrapper\"></div>\r\n\r\n## Canvas Usage\r\n\r\n    var parentDom = document.getElementById(\"parentID\");\r\n    var height = 200;\r\n    var width = 200;\r\n    var canvas = new Canvas(\"canvasID\", parentDom, height, width);\r\n\r\n    canvas.StartAnimation(); //Starts rotating the drawings\r\n\r\n## Line Usage\r\n\r\n    var xPos = 100;\r\n    var yPos = 100;\r\n    var length = 100;\r\n    var angle = 0;//In degrees\r\n    var line = new Line(canvas, xPos, yPos, length, angle);\r\n    line.Draw();\r\n    line.Rotate(); //Automaticly redraws\r\n\r\n### Line Copying & Attaching\r\nCopying a line will create a new line with the same attributes.\r\nAttaching a line to another line will make sure they're positions always stay the same.\r\n\r\n    var firstLine = new Line(canvas, 50, 50, 100, 0);\r\n    var secondLine = Line.Copy(firstLine);\r\n    secondLine.angle += 30;\r\n    secondLine.Attach(firstLine);\r\n\r\n## Arc usage\r\nAn arc will be created between the first and second line.\r\n\r\n    var firstLine = new Line(canvas, xPos, yPos, length, angle);\r\n    var secondLine = Line.Copy(firstLine);\r\n    secondLine.angle += 50;\r\n\r\n    var arc = new Arc(line1, line2);\r\n    arc.Draw();","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}